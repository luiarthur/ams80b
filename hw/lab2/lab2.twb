<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='State Data (USstates)' inline='true' name='federated.0nuchdf0b7i23g1d6s1md1q3ztm9' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='USstates' name='excel-direct.0c2trq40hhqanw17ndehn1cr61ha'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/luiar/Desktop/ams80b/hw/LabExcelSheets/USstates.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0c2trq40hhqanw17ndehn1cr61ha' name='State Data' table='[&apos;State Data$&apos;]' type='table'>
          <columns gridOrigin='A1:R57:no:A1:R57:0' header='yes' outcome='2'>
            <column datatype='integer' name='Order' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Abv' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='integer' name='Pop 2010' ordinal='4' />
            <column datatype='integer' name='Pop 2000' ordinal='5' />
            <column datatype='integer' name='House seats 2010' ordinal='6' />
            <column datatype='integer' name='House seats 2000' ordinal='7' />
            <column datatype='integer' name='Electoral votes 2010' ordinal='8' />
            <column datatype='integer' name='Electoral votes 2000' ordinal='9' />
            <column datatype='real' name='Total area (sq miles)' ordinal='10' />
            <column datatype='real' name='Land Area  (sq miles)' ordinal='11' />
            <column datatype='real' name='Water Area (sq miles)' ordinal='12' />
            <column datatype='real' name='Human Development Index 2010' ordinal='13' />
            <column datatype='integer' name='Real GDP 2010' ordinal='14' />
            <column datatype='integer' name='Real GDP 2011' ordinal='15' />
            <column datatype='integer' name='Real GDP 2012' ordinal='16' />
            <column datatype='integer' name='Real GDP 2013' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Order</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Abv</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abv]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Abv</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop 2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop 2010]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Pop 2010</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop 2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop 2000]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Pop 2000</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>House seats 2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[House seats 2010]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>House seats 2010</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>House seats 2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[House seats 2000]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>House seats 2000</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electoral votes 2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electoral votes 2010]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Electoral votes 2010</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electoral votes 2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electoral votes 2000]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Electoral votes 2000</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total area (sq miles)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total area (sq miles)]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Total area (sq miles)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land Area  (sq miles)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land Area  (sq miles)]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Land Area  (sq miles)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water Area (sq miles)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water Area (sq miles)]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Water Area (sq miles)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Human Development Index 2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Human Development Index 2010]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Human Development Index 2010</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP 2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Real GDP 2010]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Real GDP 2010</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP 2011</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Real GDP 2011]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Real GDP 2011</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP 2012</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Real GDP 2012]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Real GDP 2012</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP 2013</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Real GDP 2013]</local-name>
            <parent-name>[State Data]</parent-name>
            <remote-alias>Real GDP 2013</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R57:no:A1:R57:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' new-bin='true'>
          <bin default-name='false' value='&quot;Rest of Country&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.242671' measure-ordering='alphabetic' measure-percentage='0.757329' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Data (USstates)' name='federated.0nuchdf0b7i23g1d6s1md1q3ztm9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nuchdf0b7i23g1d6s1md1q3ztm9'>
            <column datatype='integer' name='[Real GDP 2013]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Real GDP 2013]' derivation='Sum' name='[sum:Real GDP 2013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]' direction='DESC' using='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]' />
          <sort class='computed' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]' direction='DESC' using='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]</rows>
        <cols>([federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk] / [federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Data (USstates)' name='federated.0nuchdf0b7i23g1d6s1md1q3ztm9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nuchdf0b7i23g1d6s1md1q3ztm9'>
            <column datatype='integer' name='[Real GDP 2013]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Real GDP 2013]' derivation='Sum' name='[sum:Real GDP 2013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]' direction='DESC' using='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]' />
          <sort class='computed' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]' direction='DESC' using='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]</rows>
        <cols>([federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk] / [federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Data (USstates)' name='federated.0nuchdf0b7i23g1d6s1md1q3ztm9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nuchdf0b7i23g1d6s1md1q3ztm9'>
            <column datatype='integer' name='[Real GDP 2013]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;Rest of Country&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Real GDP 2013]' derivation='Sum' name='[sum:Real GDP 2013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[State (group)]' direction='DESC' using='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]' />
          <filter class='categorical' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Territories&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]</column>
            <column>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[State (group)]</rows>
        <cols>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2013:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Data (USstates)' name='federated.0nuchdf0b7i23g1d6s1md1q3ztm9' />
          </datasources>
          <datasource-dependencies datasource='federated.0nuchdf0b7i23g1d6s1md1q3ztm9'>
            <column datatype='integer' name='[Pop 2010]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Real GDP 2010]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pop 2010]' derivation='Sum' name='[sum:Pop 2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP 2010]' derivation='Sum' name='[sum:Real GDP 2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Pop 2010:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Pop 2010:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Pop 2010:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2010:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2010:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Real GDP 2010:qk]</rows>
        <cols>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[sum:Pop 2010:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Sheet 3' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Sheet 4' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Practice1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Sheet 1' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98000' id='3' name='Sheet 2' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Practice1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[State (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Alabama, Alaska, Arizona and 37 more&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[io:NotDC:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[io:NotTerritories:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 3' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[State (group)]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:Region:nk]</field>
            <field>[federated.0nuchdf0b7i23g1d6s1md1q3ztm9].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOuklEQVR4nO3dSXMbZ3rA8X83urF0YwcBcBEpUftqW7LLqXJVDrFzyz01uSf5HL5MPkW+
      QirlQ3Ka5JLEHi+RF2m0kRRIcAEhAMS+NdDdc/CqsSiJJEBSfp/fTRRe9dsk/gU9bCya7/s+
      QihKP+kNCHGSJAChNAlAKE0CEEqTAITSjF/+oVIqsr71jHR+gV67zq0b11+6uNlqkognAHjw
      3V06PYdLt+6QsoPT27EQE/TcI8C3f3rM7XffZflMnt2tDe7e/YqN7Wfsbhb4/I+f03VcVh58
      x5df36Ne2eGTT/6dnUodgGu3brM0F6dQ2DqRExHiMJ57BPjrD/6KLz77X4LRGSLRJHfuvMf/
      ffYZuxtPOXv+HJ/+zx/YKTaYjTlUF/+eS5cuMZ9NAbBX3qawVSMxe+4kzkOIQ3nuEWB7c5NQ
      OMJg0EXTtR++qnHmzAIEwrz19m0W5pLMLF9nPmZQr+xSqtSBEcViCdM0GTnO8Z+FEIekyZVg
      oTL5LZBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKUdewBHuezwJq49yWOruO+DrjVefZPJ+sNX
      a1Rbg0Ot9TwPXT9csye19iSPreK+D7r2hQHc/+b/Sc4ucWY2+9PX2u02sVjshz+5rDxZZ3Eu
      zdPtMhcuXiX0F/+S22szDMWwAs9//b/uFni4UXvtDQoxTS8MoN1qksi0+eSTP3L+/DlafQfD
      dXjn/fd5+M3XmGGTvhMk0uhw5cpVimuPaPRcUokomu9QLTcIuAPMM5dxykWS+TymrnPmzJnj
      Pj8hXuqFAdy6/S5DZ8TVyxdJptNEh2NMf4hGgGQiRnQmTygQxA5rPHn8iGQiiW+6aG6fQCTK
      5esL+E6LWh/OXr1KeespsXM3jvvchHilY38y3OpWjb7jHmqt57noeuDVNzxFa0/y2Cru+6Br
      j30ILpTqSg7Bs+kYH727fOC14/EYwzjcj+koa0/y2Me59lBHKT5dwbBTzOdnqO2WMeMxBs09
      gtE0yZj13G17vR6W9fPXVB2Cby7nDhWAmK7DZWaEmZ+x+M9P/o3c0i0Swz7Deg1qdVaHLnYk
      gE+A7mBELp2kXi4yjuR4760rE96+EEdzqABCBuyU97h49TphO4kdDRJKZ/DdITvVDvP5DGiA
      D67rEtAWIBid8NaFODoZgqe89sf1MSvM+fnUgdfKDDDdtTIE7+Pmco5b53PAyd6RxHRN7KfS
      aze4//AJ19+6TTRs7nu7N2UI/t1HN38KQPx2TSwAK5Ykn8+xs3qP7abHfNIkbEf58uvH3Lg0
      ixea4calpUkdToiJmOjjciKRxLNCmHGfdDxEp9Pn+uULZLJxXOTd4sTpI0PwPnIpm3zKBtQc
      Jk/y2DIE72NaQ/AvB16hlsNdCV57RDKVpmekmI0/P/CWSiV0TSM3O8uP7y1X26uRSWeA0zkE
      y8CrrkMFYFoJattr7I5ifFWp8Na1Jap7XfLZLPm0zZPNGvXad7gBi1G3jmHqdB2dpdmD/x5c
      iGk6VADRaBQrsEjIC5GO2VjBMIsLNlYihxHUWZrT6LR03IBFfCEPGjhDec9QcfrIEMzzA++L
      qDhMnuSxZQjex6uG4H/46Oa+fydXY8WLTOQe8afvviZhp8lcOEvkh68Nej2ClkWjViOdyfx0
      22kOwS8LQIgXmUgAjuPgGg6FwirdRo9ESGNAkJQVoNIcUFx9IE+HFqfSRAK4eOU6AdfF8kaY
      vslsNo3rurhOn7gXJJy05OnQ4lSaSAA/vl2KBWTTv/ybJJm/+PX6P/7dnRMZgoV4kTd+CJar
      uOIoJhJArVZjPBrjaxCPxZ57DfC0XxMsV3HFUUxsCHaGDr4Gw/6ATmsPd+yhmRo9P0YuNKDp
      Rnjn+sVJHE6IiZlIAOl0+rk3JZ2dmwU8yuUqF3NZnG6LhGHt/w8IcUKO/Uqw67oEAocbZN+U
      q4un5dgq7vvUXwn+1//4mmK5dai1vu+jad8/x/TDO8vyPjviyF4ZwMP73zDWI2STFrHkDNVq
      lWw6Tr09JKSPIRglZQdZ3y6zMJdH03xK27vkZnNU95rErAjuqIdpp0lEIxRK9YkMwTdl8BUT
      8FqPAMmkxeqTAvH4HtlMmo29JvFAgFanjWH2KWwMySVtqpUSmjum+qzMVn3IUj5Gq9ViNOjQ
      Lje5/db1aZ+PEAfyygAuXLpGMBTC8HwisTR22CTxw8LGnk8wEsU3+uRnUuCO0MM2fiBILJkl
      HAzg+z7tpsmMlZz+2QhxQDIET3ntSR5bxX3/5ofgf/nnjya8I6GyiQdQLKzQanUwYymsUBjb
      CqGNhwSsJHE7PLEhWIhJmPinRI59ncVckt4IwKXValFrdnhW2pr0oYQ4sok/AiwtzFGqtbl+
      Lgka+J5Pv90gIEOwOIVkCJ7y2pM8tor7/k0PwX9z+xx/+975Ce9IqOy1A+iUNikMfGK6j6Fr
      pLN5vNEIM2gSCoUolUoEAxC2Y3T6I7xBm+RMjmqtQTaTRNMgFDraECxXf8WkHeARwMAyHdq1
      ErWOzkxzgO91CcVzXDo7z2g0YuPpOrPpKKPUZfxWna3tEpgW43EP07A4szA7vTMR4hBeO4BI
      Os25kEknliZZr5Cbm8cZe+B9/9kAseQMF0MGRsgiEotSHSVYOn+Znd0qpjdkZjY/zfMQ4lBk
      CJ7y2pM8tor7/k0OwfLUZzEt+wbw3VefY8Vz5BYy9Hou0aDP2vom2ViEqhfmxoUl1p88IJzI
      4g3aZPILDAY9+p02lu5SN5LkbZ1Ge0hIHx3p6dAy/Ipp2TeA7MIihcerOPr3n+3S8X1mZmbI
      hDVwRjzrAmaYXMbiwbdrbG/XuXxtjp5rUN0q4s7omEMNPRCg0WzI06HFqbRvAOl0huhtG8PQ
      aPZcUnELXIdWzyE7k8HTIZlNs9d0mJldIB5LYidi9LtFFt95l5GvEQxoaEDT0OTp0OJUkiF4
      ymtP8tgq7vs3OQT//p8+nNJuhOqOFEB3r0TfiNEubxPNn8Vw+wy6LcKhMH44Sqc5vdcECzEJ
      R3o6tJ2eZfPhPdLJEFs7zzCNMf1xgK3VAtuVGuDTarVo1Bs8fVqY0JaFmJwj/hdI48K1G0Qj
      QS7aOlErwN0v/5uL126TSMUwNOQ1weJUO/YheDQaTeWjTk/r2pM8tor7PujaYx+CdV0/9G+B
      gDdy7UkeW8V9H2TtsT8CCHGaBD7++OOPj/OAw26TlfUdIkGDTrdLOBL56QO1f23Ew/uPMEyD
      9c0SQW3ETqWBqWt0ul0ikci+KyvbBbxwip2nD9GMIGtrBcIhg8JWmZBp0O129l3fbuzR7g1p
      1sq0+2Nq5U183WR9dQ0tGMEbdsEME9BftHOXtcdP8DV4WigSCuoUdyr4Tpdaq4cOLz32zuY6
      rf6Iyk4RLWDwdG39tfddr5bZLu8x6jdp9Q6272GvxcpqAfDYrewx7rdpdIc0KjuMNY12Y0Aw
      st85w/r6OgF/zGa59qu17mBMbzgmEg6+cG2jvMnA01hdLWAaOpul1/9+bRcL9Byfys76gX/O
      9eru5F8U/yqVeps522S9XKJSb77kzg84XTqOR7nWYs422ek4mJpHceUePc982UqyiTCdYQcz
      MsfGo4csX57jweMS6VCArVKRerO379pYMs3I6dPtdvC8IUYoye7KA+auLFN4tEJhu0IwsN/O
      dVKZNM92q1xZTvNwvY5tavRGLrgOK/e+wjP3/7ioZCqFrmt0ux1qO+UD7duyLDqdDiNXx3Wa
      B9p3yLJxe10anS6u6+K44I0G6GaEXrvM5tO1fdf22nUqjQ7NzoBQgF+t/eKLe8Tj+3wMrTei
      uVfhWbWB40Gt1T3Q96vb7eK6rUP9nLud7vEHEIuYbOx1yKcyxMJBvJf8B8z1g8TtAEEdNvY6
      JA2PTt9h9uxltOHLL6btlGs0am3a9SIz8/OsPNhgfj7BbqtLLjNLOKix36Eb1TI75Rq2ZTMY
      enSbZeJzCxQfrJBZWGA+E6M/8l682HMoFLZIJqM8WNllIRtmr9NHd0cMxz5nL99g2Nrbd98b
      hQKeN8a24wSt4IH23W63CQQM3FGfsR860L577TZG2CQYjDAcDvFGAxxPo9+uowdjZOcX913r
      uh6+02Psjml1f732+rXz7DXaL147HjEY+4w8sAMjdPwDfb9s22Y4DBzq52zbtswAQm3H/ggg
      xGkiAQilHft1AHF6PLz/DX03yJ23f36dRmNnEyO3yF7xCXt9H9PtMiRMNuTR0W3m0xHuP9li
      eTFDueGQ1DtEl96mvHqXWHaZswtZPv30U2q1GplMhg8++OAEz/DVJACFbW5tMfBM6psPcOML
      NNe+JZU/z80PF1kv7mJFI3THY4xhh5Lfo0mUq+ffp1v/lkfeiJDmsjwfYaczJhIMUHpW4+xC
      FuCNuPODBKC0ucVl+u0Onhshn0/wuDmPb0QI6hCzDKrtPlHTpadHuJrL8P6VGzy6+ynB1Awz
      UYNaa8hWqUbTLmI7Ppb9893pTbjzg1wJFoqTIVgoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0
      CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMA
      hNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAo
      TQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSvszie/BldyR
      4IEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Practice1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      1P4/LR1Qu7sXAhgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
